---
- hosts: localhost
  connection: local
  gather_facts: no

  # vars_files:
  #   - "vars/fromTerraform.yml"
  #   - "vars/creds.json"

  # vars:
  #   listVsName: []
  #   listPoolName: []
  #   listVsVip: []

  roles:
    - role: "avinetworks.avisdk"

  tasks:

    - name: Debug
      debug:
        msg: "{{ avi_credentials }}"
      tags:
        - debug

    - name: Get GSLB list
      avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: get
        path: gslbservice
      register: gslbserviceResults

    # - name: Debug
    #   debug:
    #     msg: "{{ item.name }}"
    #   loop: "{{ gslbserviceResults.obj.results }}"
    #   tags:
    #     - debug
    #
    # - name: Debug
    #   debug:
    #     msg: "{{ item.uuid }}"
    #   loop: "{{ gslbserviceResults.obj.results }}"
    #   tags:
    #     - debug

    - name: "Delete Glsb services - it may fails if not executed in the leader cluster"
      avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: "delete"
        path: '{{"gslbservice/" + item.uuid }}'
      ignore_errors: yes
      loop: "{{ gslbserviceResults.obj.results }}"

    - name: "Get GSLB list"
      avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: get
        path: gslbgeodbprofile
      register: gslbgeodbprofileResults

    - name: "Delete Glsb Geo profile - it may fails if not executed in the leader cluster"
      avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: "delete"
        path: '{{"gslbgeodbprofile/" + item.uuid }}'
      ignore_errors: yes
      loop: "{{ gslbgeodbprofileResults.obj.results }}"

    - name: "Get GSLB config"
      avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: get
        path: gslb
      register: gslbResults

    - name: "Delete Glsb config - it may fails if not executed in the leader cluster"
      avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: "delete"
        path: '{{"gslb/" + item.uuid }}'
      ignore_errors: yes
      loop: "{{ gslbResults.obj.results }}"


    - name: get DNS VS used by system
      avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: get
        timeout: 300
        path: systemconfiguration
      register: systemconfigurationOutput

    - name: Debug
      debug:
        msg: "{{ systemconfigurationOutput.obj.dns_virtualservice_refs }}"
      when: systemconfigurationOutput.obj.dns_virtualservice_refs is defined

    - name: Delete DNS VS used by system in systemconfiguration
      avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: patch
        timeout: 300
        path: systemconfiguration
        data: {"delete":{"dns_virtualservice_refs":["{{ item }}"]}}
      loop: "{{ systemconfigurationOutput.obj.dns_virtualservice_refs }}"
      when: systemconfigurationOutput.obj.dns_virtualservice_refs is defined

    - name: get VS
      avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: get
        timeout: 300
        path: virtualservice
      register: virtualserviceResults
      tags:
        - debug

    - name: "Delete vs config"
      avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: "delete"
        path: '{{"virtualservice/" + item.uuid }}'
      loop: "{{ virtualserviceResults.obj.results }}"

    # - name: Append Vs name to the list
    #   set_fact:
    #     listVsName: "{{ listVsName }} + [ '{{ item.name }}' ]"
    #   loop: "{{ virtualserviceResults.obj.results }}"
    #   loop_control:
    #    label: "{{ item.name }}"
    #   tags:
    #     - debug
    #
    # - name: Debug
    #   debug:
    #     msg: "{{ item }}"
    #   loop: "{{ listVsName }}"
    #   tags:
    #     - debug
    #
    # - name: Delete Virtualservice
    #   avi_virtualservice:
    #     avi_credentials: "{{ avi_credentials }}"
    #     api_version: "{{ avi_credentials.api_version }}"
    #     name: "{{ item }}"
    #     state: absent
    #     cloud_ref: "/api/cloud/?name={{ avi_cloud.name }}"
    #     tenant_ref: "/api/tenant?name={{ item.tenant_ref | default('admin') }}"
    #     tenant: "{{ item.tenant_ref | default('admin') }}"
    #   loop: "{{ listVsName }}"
    #   loop_control:
    #     label: "{{ item }}"


    - name: get vsvip
      avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: get
        timeout: 300
        path: vsvip
      register: vsvipResults
      tags:
        - debug

    - name: "Delete vsvip config"
      avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: "delete"
        path: '{{"vsvip/" + item.uuid }}'
      loop: "{{ vsvipResults.obj.results }}"

    # - name: Append Vsvip name to the list
    #   set_fact:
    #     listVsVip: "{{ listVsVip }} + [ '{{ item.name }}' ]"
    #   loop: "{{ vsvipResults.obj.results }}"
    #   loop_control:
    #    label: "{{ item.name }}"
    #   tags:
    #     - debug
    #
    # - name: Debug
    #   debug:
    #     msg: "{{ item }}"
    #   loop: "{{ listVsVip }}"
    #   tags:
    #     - debug
    #
    # - name: Delete VsVip
    #   avi_vsvip:
    #     avi_credentials: "{{ avi_credentials }}"
    #     api_version: "{{ avi_credentials.api_version }}"
    #     name: "{{ item }}"
    #     state: absent
    #     cloud_ref: "/api/cloud/?name={{ avi_cloud.name }}"
    #     tenant_ref: "/api/tenant?name={{ item.tenant_ref | default('admin') }}"
    #     tenant: "{{ item.tenant_ref | default('admin') }}"
    #   loop: "{{ listVsVip }}"
    #   loop_control:
    #     label: "{{ item }}"

    - name: get pools
      avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: get
        timeout: 300
        path: pool
      register: poolResults

    - name: "Delete pool config"
      avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: "delete"
        path: '{{"pool/" + item.uuid }}'
      loop: "{{ poolResults.obj.results }}"

    # - name: Append Pool name to the list
    #   set_fact:
    #     listPoolName: "{{ listPoolName }} + [ '{{ item.name }}' ]"
    #   loop: "{{ poolResults.obj.results }}"
    #   loop_control:
    #    label: "{{ item.name }}"
    #
    # - name: Delete pool
    #   avi_pool:
    #     avi_credentials: "{{ avi_credentials }}"
    #     api_version: "{{ avi_credentials.api_version }}"
    #     name: "{{ item }}"
    #     cloud_ref: "/api/cloud/?name={{ avi_cloud.name }}"
    #     tenant: "{{ item.tenant_ref | default('admin') }}"
    #     tenant_ref: "/api/tenant?name={{ item.tenant_ref | default('admin') }}"
    #     state: absent
    #   loop: "{{ listPoolName }}"
    #   loop_control:
    #     label: "{{ item }}"

    - name: Get SE list
      avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: get
        path: serviceengine
      register: serviceengineResults

    - name: "Delete SE"
      avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: "delete"
        path: '{{"serviceengine/" + item.uuid }}'
      loop: "{{ serviceengineResults.obj.results }}"

    # - name: Debug
    #   debug:
    #     msg: "{{ item.name }}"
    #   loop: "{{ serviceengineResults.obj.results }}"
    #   tags:
    #     - debug
    #
    # - name: Delete All SEs
    #   avi_serviceengine:
    #     avi_credentials: "{{ avi_credentials }}"
    #     api_version: "{{ avi_credentials.api_version }}"
    #     name: "{{ item.name }}"
    #     state: absent
    #   loop: "{{ serviceengineResults.obj.results }}"
    #   loop_control:
    #     label: "{{ item.name }}"

    - name: Pausing for 120 seconds
      pause:
        minutes: 2

    - name: Get SE group list
      avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: get
        path: serviceenginegroup
      register: serviceenginegroupResults

    - name: "Delete SE Groups"
      avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: "delete"
        path: '{{"serviceenginegroup/" + item.uuid }}'
      loop: "{{ serviceenginegroupResults.obj.results }}"
      when: item.name != "Default-Group"

    # - name: Debug
    #   debug:
    #     msg: "{{ item.name }}"
    #   loop: "{{ serviceenginegroupResults.obj.results }}"
    #   tags:
    #     - debug
    #
    # - name: Delete se group (except Default Group)
    #   avi_serviceenginegroup:
    #     cloud_ref: "/api/cloud/?name={{ avi_cloud.name }}"
    #     avi_credentials: "{{ avi_credentials }}"
    #     api_version: "{{ avi_credentials.api_version }}"
    #     name: "{{ item.name }}"
    #     state: absent
    #   loop: "{{ serviceenginegroupResults.obj.results }}"
    #   loop_control:
    #     label: "Modifying SE group called {{ item.name }}"
    #   when: item.name != "Default-Group"

    - name: Revert cloud to No Access (for vmw)
      avi_cloud:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        name: "{{ vmw.name }}"
        vtype: CLOUD_NONE
      when:
        - vmw is defined

    - name: Revert cloud to No Access (for nsxt)
      avi_cloud:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        name: "{{ nsxt.name }}"
        vtype: CLOUD_NONE
      when:
        - nsxt is defined

    - name: Delete Avi IPAM
      avi_ipamdnsproviderprofile:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        name: "{{ ipam.name | default('ipam-avi') }}"
        type: IPAMDNS_TYPE_INTERNAL
        state: absent
      ignore_errors: yes

    - name: Discover remaining configured networks
      avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: "get"
        path: '{{ "network/?cloud_ref.name=" + vmw.name }}'
      register: networks
      ignore_errors: yes


    - name: Delete configured networks
      avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: "delete"
        path: '{{"network/" + item.uuid }}'
      loop: "{{ networks.obj.results }}"
      ignore_errors: yes

    - name: Discover remaining configured networks (for nsxt)
      avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: "get"
        path: '{{ "network/?cloud_ref.name=" + nsxt.name }}'
      register: networks
      when:
        - nsxt is defined

    - name: Delete configured networks (for nsxt)
      avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: "delete"
        path: '{{"network/" + item.uuid }}'
      loop: "{{ networks.obj.results }}"
      when:
        - nsxt is defined


    #
    #
    # - name: Delete Network Vip Placement (for vmw)
    #   avi_network:
    #     avi_credentials: "{{ avi_credentials | default(omit) }}"
    #     api_context: "{{ avi_api_context | default(omit) }}"
    #     cloud_ref: "/api/cloud/?name={{ vmw.name }}"
    #     tenant_ref: "/api/tenant?name={{ item.tenant_ref | default('admin') }}"
    #     name: "{{ avi_network_vip.name }}"
    #     state: absent
    #   when:
    #     - avi_network_vip is defined
    #     - vmw is defined
    #
    # - name: Delete Network Vip Placement (for nsxt)
    #   avi_network:
    #     avi_credentials: "{{ avi_credentials | default(omit) }}"
    #     api_context: "{{ avi_api_context | default(omit) }}"
    #     cloud_ref: "/api/cloud/?name={{ vmw.name }}"
    #     tenant_ref: "/api/tenant?name={{ item.tenant_ref | default('admin') }}"
    #     name: "{{ avi_network_vip.name }}"
    #     state: absent
    #   when:
    #     - avi_network_vip is defined
    #     - nsxt is defined

    - name: Pausing for 20 seconds
      pause:
        seconds: 20

    - name: Get Clouds list
      avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: get
        path: cloud
      register: cloudResults

    - name: "Delete clouds"
      avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: "delete"
        path: '{{"cloud/" + item.uuid }}'
      loop: "{{ cloudResults.obj.results }}"
      when: item.name != "Default-Cloud"


    # - name: Delete Avi Cloud
    #   avi_cloud:
    #     avi_credentials: "{{ avi_credentials | default(omit) }}"
    #     api_context: "{{ avi_api_context | default(omit) }}"
    #     name: "{{ avi_cloud.name }}"
    #     state: absent
    #     vtype: "{{ avi_cloud.vtype }}"
    #   when: avi_cloud is defined
    #   tags: cloud
    #   ignore_errors: yes
