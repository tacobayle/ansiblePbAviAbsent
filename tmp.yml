    - name: get VS
      avi_api_session:
        avi_credentials: "{{ avi_credentials }}"
        api_version: "{{ avi_credentials.api_version }}"
        http_method: get
        timeout: 300
        path: virtualservice
      register: virtualserviceResults
      tags:
        - debug

    - name: Append Vs name to the list
      set_fact:
        listVsName: "{{ listVsName }} + [ '{{ item.name }}' ]"
      loop: "{{ virtualserviceResults.obj.results }}"
      loop_control:
       label: "{{ item.name }}"
      tags:
        - debug

    - name: Debug
      debug:
        msg: "{{ item }}"
      loop: "{{ listVsName }}"
      tags:
        - debug

    - name: Delete Virtualservice
      avi_virtualservice:
        avi_credentials: "{{ avi_credentials }}"
        api_version: "{{ avi_credentials.api_version }}"
        name: "{{ item }}"
        state: absent
        cloud_ref: "/api/cloud/?name={{ avi_cloud.name }}"
        tenant_ref: "/api/tenant?name={{ item.tenant_ref | default('admin') }}"
        tenant: "{{ item.tenant_ref | default('admin') }}"
      loop: "{{ listVsName }}"
      loop_control:
        label: "{{ item }}"


    - name: get vsvip
      avi_api_session:
        avi_credentials: "{{ avi_credentials }}"
        api_version: "{{ avi_credentials.api_version }}"
        http_method: get
        timeout: 300
        path: vsvip
      register: vsvipResults
      tags:
        - debug

    - name: Append Vsvip name to the list
      set_fact:
        listVsVip: "{{ listVsVip }} + [ '{{ item.name }}' ]"
      loop: "{{ vsvipResults.obj.results }}"
      loop_control:
       label: "{{ item.name }}"
      tags:
        - debug

    - name: Debug
      debug:
        msg: "{{ item }}"
      loop: "{{ listVsVip }}"
      tags:
        - debug

    - name: Delete VsVip
      avi_vsvip:
        avi_credentials: "{{ avi_credentials }}"
        api_version: "{{ avi_credentials.api_version }}"
        name: "{{ item }}"
        state: absent
        cloud_ref: "/api/cloud/?name={{ avi_cloud.name }}"
        tenant_ref: "/api/tenant?name={{ item.tenant_ref | default('admin') }}"
        tenant: "{{ item.tenant_ref | default('admin') }}"
      loop: "{{ listVsVip }}"
      loop_control:
        label: "{{ item }}"

    - name: get pools
      avi_api_session:
        avi_credentials: "{{ avi_credentials }}"
        api_version: "{{ avi_credentials.api_version }}"
        http_method: get
        timeout: 300
        path: pool
      register: poolResults

    - name: Append Pool name to the list
      set_fact:
        listPoolName: "{{ listPoolName }} + [ '{{ item.name }}' ]"
      loop: "{{ poolResults.obj.results }}"
      loop_control:
       label: "{{ item.name }}"

    - name: Delete pool
      avi_pool:
        avi_credentials: "{{ avi_credentials }}"
        api_version: "{{ avi_credentials.api_version }}"
        name: "{{ item }}"
        cloud_ref: "/api/cloud/?name={{ avi_cloud.name }}"
        tenant: "{{ item.tenant_ref | default('admin') }}"
        tenant_ref: "/api/tenant?name={{ item.tenant_ref | default('admin') }}"
        state: absent
      loop: "{{ listPoolName }}"
      loop_control:
        label: "{{ item }}"

    - name: Get SE list
      avi_api_session:
        avi_credentials: "{{ avi_credentials }}"
        api_version: "{{ avi_credentials.api_version }}"
        http_method: get
        path: serviceengine
      register: serviceengineResults

    - name: Debug
      debug:
        msg: "{{ item.name }}"
      loop: "{{ serviceengineResults.obj.results }}"
      tags:
        - debug

    - name: Delete All SEs
      avi_serviceengine:
        avi_credentials: "{{ avi_credentials }}"
        api_version: "{{ avi_credentials.api_version }}"
        name: "{{ item.name }}"
        state: absent
      loop: "{{ serviceengineResults.obj.results }}"
      loop_control:
        label: "{{ item.name }}"

    - name: Pausing for 120 seconds
      pause:
        minutes: 2

    - name: Get SE group list
      avi_api_session:
        avi_credentials: "{{ avi_credentials }}"
        api_version: "{{ avi_credentials.api_version }}"
        http_method: get
        path: serviceenginegroup
      register: serviceenginegroupResults

    - name: Debug
      debug:
        msg: "{{ item.name }}"
      loop: "{{ serviceenginegroupResults.obj.results }}"
      tags:
        - debug

    - name: Delete se group (except Default Group)
      avi_serviceenginegroup:
        cloud_ref: "/api/cloud/?name={{ avi_cloud.name }}"
        avi_credentials: "{{ avi_credentials }}"
        api_version: "{{ avi_credentials.api_version }}"
        name: "{{ item.name }}"
        state: absent
      loop: "{{ serviceenginegroupResults.obj.results }}"
      loop_control:
        label: "Modifying SE group called {{ item.name }}"
      when: item.name != "Default-Group"

    - name: "Revert cloud to No Access"
      avi_cloud:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_version: "{{ avi_credentials.api_version }}"
        name: "{{ avi_cloud.name }}"
        vtype: CLOUD_NONE
      when:
        - avi_cloud is defined
        - avi_cloud.vtype == "CLOUD_VCENTER"

    - name: Delete Avi IPAM
      avi_ipamdnsproviderprofile:
        avi_credentials: "{{ avi_credentials }}"
        api_version: "{{ avi_credentials.api_version }}"
        name: "{{ ipam.name | default('ipam-avi') }}"
        type: IPAMDNS_TYPE_INTERNAL
        state: absent
      when:
        - avi_cloud.vtype == "CLOUD_VCENTER"

    - name: "Discover remaining configured networks"
      avi_api_session:
        avi_credentials: "{{ avi_credentials }}"
        api_version: "{{ avi_credentials.api_version }}"
        http_method: "get"
        path: '{{ "network/?cloud_ref.name=" + avi_cloud.name }}'
      register: networks
      when:
        - avi_cloud.vtype == "CLOUD_VCENTER"
        - avi_cloud is defined

    - name: "Delete configured networks"
      avi_api_session:
        avi_credentials: "{{ avi_credentials }}"
        api_version: "{{ avi_credentials.api_version }}"
        http_method: "delete"
        path: '{{"network/" + item.uuid }}'
      loop: "{{ networks.obj.results }}"
      when:
        - avi_cloud.vtype == "CLOUD_VCENTER"
        - avi_cloud is defined

    - name: Delete Network Vip Placement
      avi_network:
        avi_credentials: "{{ avi_credentials }}"
        api_version: "{{ avi_credentials.api_version }}"
        cloud_ref: "/api/cloud/?name={{ avi_cloud.name }}"
        tenant_ref: "/api/tenant?name={{ item.tenant_ref | default('admin') }}"
        name: "{{ avi_network_vip.name }}"
        state: absent
      when:
        - avi_network_vip is defined
        - avi_cloud.vtype == "CLOUD_VCENTER"
        - avi_cloud is defined

    - name: Pausing for 20 seconds
      pause:
        seconds: 20

    - name: Delete Avi Cloud
      avi_cloud:
        avi_credentials: "{{ avi_credentials }}"
        api_version: "{{ avi_credentials.api_version }}"
        name: "{{ avi_cloud.name }}"
        state: absent
        vtype: "{{ avi_cloud.vtype }}"
      when: avi_cloud is defined
      tags: cloud
      ignore_errors: yes
